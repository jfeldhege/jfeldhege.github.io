---
title: "Publikationen"
---

Auch zu finden auf [{{< ai google-scholar >}} Google Scholar](https://scholar.google.com/citations?user=KSmfyO8AAAAJ&hl=de), [{{< ai researchgate >}} Researchgate](https://scholar.google.com/citations?user=KSmfyO8AAAAJ&hl=de) und [{{< ai orcid >}} ORCiD](https://orcid.org/0000-0002-4665-5235).
`r cat("<br><br><br><br>")`


```{r}
#| echo: false
#| output: asis
#| warning: false
#| error: false

suppressMessages(library(easyPubMed))
suppressMessages(library(dplyr))
suppressMessages(library(glue))
suppressMessages(library(stringr))
suppressMessages(library(tidyr))

my_query <- paste("Johannes Feldhege", "[au]")

my_pubmed_ids <- get_pubmed_ids(my_query)
my_data <- fetch_pubmed_data(my_pubmed_ids, encoding = "ASCII")

suppressMessages(art_df <- table_articles_byAuth(my_data,
                            included_authors = "all",
                            max_chars = 2000,
                            encoding = "ASCII"))

art_df <- art_df %>% 
  mutate(firstname = paste0(stringr::str_sub(firstname,1,1), "."),
         journal = stringr::str_to_title(stringr::str_remove(journal, "\\([A-z ,]+\\)"))) %>% 
  tidyr::unite("name", c(lastname, firstname),  sep = ", ") %>% 
  mutate(name = case_when(name == "Feldhege, J." ~ "**Feldhege, J.**",
                          TRUE ~ name)) %>% 
  mutate(authors = paste(name, collapse = ", "), .by = pmid) %>% 
  mutate(doi = glue("https://dx.doi.org/{doi}"),
         ref = glue("{authors} *{title}* {journal} ({year}). <{doi}>"))

title_df <- art_df %>% 
  group_by(pmid) %>% 
  slice(1) %>% 
  select(pmid, year, ref, abstract, keywords) %>% 
  arrange(desc(as.numeric(year)))


for (i in 1:length(unique(title_df$year))) {
  cat(glue("<p><b>{unique(title_df$year)[i]}</b></p>"))
  
  tdf <- title_df %>% filter(year == unique(title_df$year)[i])
  
  for (i in 1:nrow(tdf)) {
    cat(glue("<p>{tdf$ref[i]}</p>"))
    if(!is.na(tdf$keywords[i]) & nchar(tdf$keywords[i]) > 20) cat(glue("<p>Keywords: *{tdf$keywords[i]}*</p>"))
    cat('<p>::: {.callout-tip collapse="true" icon="false"} \n')
    cat('## Abstract\n')
    cat(tdf$abstract[i])
    cat('\n:::\n</p>')
    #cat(paste('<p> \n *** \n </p>')) # horizontal line
    cat('<br>') 
  }
}

```
